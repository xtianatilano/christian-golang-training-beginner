// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/xtianatilano/christian-golang-training-beginner/internal/rest (interfaces: InquiryService)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	golangtraining "github.com/xtianatilano/christian-golang-training-beginner"
)

// MockInquiryService is a mock of InquiryService interface.
type MockInquiryService struct {
	ctrl     *gomock.Controller
	recorder *MockInquiryServiceMockRecorder
}

// MockInquiryServiceMockRecorder is the mock recorder for MockInquiryService.
type MockInquiryServiceMockRecorder struct {
	mock *MockInquiryService
}

// NewMockInquiryService creates a new mock instance.
func NewMockInquiryService(ctrl *gomock.Controller) *MockInquiryService {
	mock := &MockInquiryService{ctrl: ctrl}
	mock.recorder = &MockInquiryServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockInquiryService) EXPECT() *MockInquiryServiceMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockInquiryService) Create(arg0 *golangtraining.Inquiry) (*golangtraining.Inquiry, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0)
	ret0, _ := ret[0].(*golangtraining.Inquiry)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockInquiryServiceMockRecorder) Create(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockInquiryService)(nil).Create), arg0)
}
